

services:
  postgres:
    image: postgres:latest
    container_name: book_db
    restart: on-failure
    environment:
      POSTGRES_DB: ${POSTGRES_DB_NAME}
      POSTGRES_USER: ${POSTGRES_DB_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_DB_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      timeout: 10s
    volumes:
      - pgdata:/var/lib/postgresql/data

  book-service:
    container_name: book-service
    build:
      context: ./BookServiceCS
      dockerfile: BookServiceCS/Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - ASPNETCORE_URLS=http://0.0.0.0:5555
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=${POSTGRES_DB_NAME};Username=${POSTGRES_DB_USERNAME};Password=${POSTGRES_DB_PASSWORD};Include Error Detail=true
    ports:
      - "5555:5555"

  order-service:
    container_name: order-service
    build:
      context: .
      dockerfile: order-service/Dockerfile
    depends_on:
      order-db:
        condition: service_healthy
      book-service:
        condition: service_started
    environment:
      ORDER_GRPC_PORT: ${ORDER_GRPC_PORT}
      ORDER_GRPC_HOST: ${ORDER_GRPC_HOST}
      MONGO_DB_HOST: ${MONGO_DB_HOST}
      MONGO_DB_PORT: ${MONGO_DB_PORT}
      MONGO_DB_USERNAME: ${MONGO_DB_USERNAME}
      MONGO_DB_PASSWORD: ${MONGO_DB_PASSWORD}
      BOOK_SERVICE_HOST: book-service
      BOOK_SERVICE_PORT: "5555"
      CONFIG_PATH: ${CONFIG_PATH}

  order-db:
    container_name: order-db
    restart: on-failure
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_DB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_DB_PASSWORD}
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')" ]
      retries: 5
      timeout: 10s
      interval: 10s
    volumes:
      - order-db-data:/data/db

  api-gateway:
    container_name: api-gateway
    build: ./api-gateway
    depends_on:
      - book-service
      - order-service
    ports:
      - "8080:8080"
    environment:
      ORDER_GRPC_PORT: ${ORDER_GRPC_PORT}
      ORDER_GRPC_HOST: ${ORDER_GRPC_HOST}
      MONGO_DB_HOST: ${MONGO_DB_HOST}
      MONGO_DB_PORT: ${MONGO_DB_PORT}
      MONGO_DB_USERNAME: ${MONGO_DB_USERNAME}
      MONGO_DB_PASSWORD: ${MONGO_DB_PASSWORD}
      BOOK_SERVICE_HOST: book-service
      BOOK_SERVICE_PORT: "5555"
      POSTGRES_DB_HOST: ${POSTGRES_DB_HOST}
      POSTGRES_DB_PORT: ${POSTGRES_DB_PORT}
      CONFIG_PATH: ${CONFIG_PATH}

volumes:
  pgdata:
  order-db-data:
